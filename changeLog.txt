ChangeLog

v.0.9.45 July 9, 2020
	Put in the groundwork for a mugger; currently steals items and leaves.  May program him to give the owner the items.  Requires a huge rework of the move function

v.0.9.44 July 9, 2020
	Added a little bit of detail to the item explanation section for the recall.  Need to make sure future commits have item details added in that section as things are added in.

v.0.9.44 July 9, 2020
	Went back to debug mode.  Added recall, which makes a piece return in x turns (currently 10) to the tile that it cast it on, no matter what (even if the piece died or the tile moved or was removed), in the exact state it was in when using the item (item still gets used up first). Added some notes to how the orb eater works and added an extra shuffle feature to when it's looking for a new place to go to.  I should probably add some better AI that lets it "smell" an orb nearby. Also (in a recent change) forgot to note a "cleanTile" function was added to remove wormholes and orbEaters and other "non tangibles" from a tile (recall nodes are not affected).

v.0.9.44 July 7, 2020
	Temporarily disabled debug mode.  Enabled normal mode so that people can test it out.  Fixed a glitch in the "find current turn" function (used j[i] instead of j[1]).

v.0.9.44 July 7, 2020
	Item explanation button added; explains how the items work.
v.0.9.43 July 7, 2020
	Added reproduce; piece makes a newborn piece with no powers/items/buffs/debuffs in an adjacent location.

v.0.9.42 July 7, 2020
	Round earth theory has received a picture.  Worm hole implemented.  Better checks for making sure spots are "truly empty" (hotspots/orbeater).  Better default tile info. 

v.0.9.41 July 7, 2020
	Round earth completed (wrap around the field).  Needs a picture though. 

v.0.9.41 July 7, 2020
	Added mouse sound effects.  Made capititalization consistent in items list. 

v.0.9.40 July 7, 2020
	Implemented the orb eater.  Eats orbs.  Corrected some glitches such as where it gets overwritten if an item orb spawns on its location.  Needs to have some more checks implemented, such as not allowing items to be put on them.  Perhaps change to occupied tiles if mouse is on them?  Alternatively, this may cause issues with haymaker/bowling ball type pieces.  Mouse is intentionally immune to lasers and bombs.  

v.0.9.39 July 7, 2020
	Trimmed down code by removing a lot of debug messages and inert commented code

v.0.9.38 July 7, 2020
	Dynamically resized item menus - no longer have to worry about losing the cancel button once you have over 10 items.  However, it still looks bad after 15 items or so, so I need to program a feature that stops you from picking up over 15 items.

v.0.9.37.1 July 7, 2020
	Added vertical lasers.  Lasers properly interact with each other, including "cross beams".  Shuffling function has been made to act more pretty by adding a "turn lasers off only" keyword variable that shuts down the lasers when they're about to be shuffled (and then turned back on afterwards). !<Need to add checks for lasers touching haymakered pieces in a future commit>!

v.0.9.37.1 July 6, 2020
	Corrected the logic for lasers.  Should properly be shooting left and right.  No longer "hides" laser tripods if another one is already firing.  Laser emitters are intentionally immune to each other.  They can be placed down in another existing laser.  Idea: make lasers last X turns and make them fail after that many turns elapsed. 

v.0.9.37 July 6, 2020
	Added a lot of "preloading" for PNGs.  Should speed up the game. Glitchy row laser put in place.  Properly attacks to the left; gets confused about the right.  Partial commit to avoid code loss.

v.0.9.36.2 July 6, 2020
	Finished the left and right checks in haymaker.  Fixed a few errors with the bowling ball as well.  Bowling ball and haymaker should be finished for all intents and purposes (aside for dealing with lasers as they haven't been implemented yet).

v.0.9.36.1 July 6, 2020
	Fixed a few up/down errors in haymaker (crashed when hitting the walls; turns out the code wasn't properly tested; rewrote all the logic for that section).  Committing this and then working on left/right.

v.0.9.36 July 6, 2020
	Disable the main window when showing menus to avoid stray clicks that may cause crashes.  This is a lot simpler than putting in error checks for it while still doing the job (it does it better this way, too). 

v.0.9.35.1 July 6, 2020
	Implemented a message for when a piece falls into a void, and also a specific one for the bowling ball function.

v.0.9.35 July 6, 2020
	Bowling ball doesn't stun itself anymore (functionality doesn't change, as your turn ends either way), as I want the bowling ball to have a lore of being an almost unstoppable machine of destruction (on its turn).  That said, it'll be invincible against lasers on its own turn, but WILL fall into the void on opponent's turn (and die to any negative effects that occur on the opponent's turn). 

v.0.9.34.2 July 5, 2020
	Finished most of the downwards aspect of bowling ball- found some logic flaws.  Need to still add laser check and hole check.  Currently properly collides with allied piece and destroys the first enemy piece it crashes into.  Stuns itself when it stops moving and ends your turn (it's a very strong piece).

v.0.9.34.1 July 5,2020
	Mostly done with the "down" aspect of the bowling ball. 

v.0.9.34 July 5, 2020
	Added the framework for a bowling ball item.  Needs to have the movement implemented.  Currently properly transforms a piece into a bowling ball and prevents it from moving normally.  Shows a menu allowing user to pick up/down/left/right (but menu doesn't work yet)


v.0.9.33 Created this changelog (this file used to be part of the README).  Added sound support with the playsound module.

v.0.9.32 Fixed some issues with the highlight feature that conflicted with shuffles.  Also found an error with an out of place remove("shuffle column") that was under the "shuffle radial" section.

v.0.9.31 Spooky hand has been created. Needs a better animation.

v.0.9.30 Added a function that better tracks when your piece should be highlighted. 

v.0.9.29 Added a cheat button that gives all pieces a specified item.  Useful for debugging; will probably remove for the actual game.  Changed snake icon.

v.0.9.28 Made the code look formatted nicer (especially long lists).  Removed a lot of commented code that is confirmed unnecessary.

v.0.9.27 Magnet fully implemented (I think).  Added a mapper function to support the suck0in effect.  

v.0.9.26 Haymaker almost fully implemented - your piece should die if it has a trip mine attached or if it hits a mine/hole in any direction. I say almost fully because I have to implement tile heights as a concept before that aspect can be worked on.  But as-is, everything should be good.

v.0.9.25 Shuffle radial implemented.  Added some arrows for the items, but haven't implemented them yet.  Will include with next commit hopefully, along with shuffle row.

v.0.9.24 Shuffle column implemented, with a neat step by step removal and replacement of pieces.  Shuffling does not affect tripmines since technically the tile is warped out of play and replaced back into existence... the actual piece never moves off the tile. Also combined the print message and window["information"] messages into one function.

v.0.9.23 NO LONGER WRITES TO DISK.  HUGE PERFORMANCE GAINS! Also, corrected a glitch where pieces will explode if they kill an enemy on their second (or higher) turn.  Also moved all the images into the image folder.

v.0.9.22 Attempted to work on animated images, but it didn't work out (could be a limitation on pysimplegui/tkinter, researching on solution).  Made item menu prettier, but in early stages and only shows a handful of items.  

v.0.9.21 added a prettier item orb.  Delaying the item menu slightly while I work on an animmated item orb.

v.0.9.20 added some better graphics for purify radial and abolish radial.  Fixed an error where killing someone while trip mined does not kill you.  Fixed an error where move again buffs don't show up properly on turn 0 (which technically won't happen in a real game, but I still would rather have that case accounted for).  Fixed an error that says that you wasted a purify or abolish (the message appeared if the first attempted square was already empty of buffs/debuffs instead of waiting to check all of them; this was due to a bad indentation).  Modified sleep times to be lower, making the game more responsive (this is possible due to the output messages from v0.9.10 allowing you to see messages that flashed by too quickly in the information box).  Temporarily disabled the title menu to save a click (and like 5 seconds per debug). Immediate to-do for next commit:  make the item menu neater.  

v.0.9.19 temporary trip mine visuals added, fixed a logic glitch where dying from moving a trip mined piece allows the player to move again.  Post edit: also made the items menu be "always on top"

v.0.9.18 better trap orb logic - you can now move off your own orb and it'll stay there without being consumed. Removed some debug messages

v.0.9.17 added trap orbs item (puts down a mine that looks like a normal orb, but doesn't affect you if you placed it), and fixed a glitch in move again that gave you unlimited turns (missing a return statement when a player says no to moving again, ironically). However, the item orb disappears when you step on your own, so that logic needs to be updated or the item changed to do something else if you pick it up.

v.0.9.16 Corrected some death check errors that occur due to piece dying early and not properly setting the space as "not occupied".  Added "always on top" to all popups to avoid errors where the popup disappears.

v.0.9.15 Added a mine item.  Added a death check related to traps (to make it easier to program new traps without a ton of checks being needed each time); can be used to replace existing code if I feel like it

v.0.9.14 Added better move again icons (and implemented them).

v.0.9.13.1 Hotfix:  was missing a continue command in the previous code.  Whenever a piece was killed, instead of continuing, it would "return", ending the player's turn.  It should be working properly from now on.  

v.0.9.13 Mostly complete with "move again".  There appears to be a glitch occurring with stacking move again powerups - if you keep moving around normally, there are no issues.  But it seems that you lose turns if you click on a wrong piece between moves or if you pick up an item.  More testing will  need to be done, but uploading this build, along with a temporary limit of one "move again buff" so that my code is backed up for the former, and so that I don't spend too much time on a situation that will likely rarely occur anyway (for the latter).

v.0.9.12 Added move diagonal.  

v.0.9.11 Finished all directions of the haymaker.  Still need to do laser/mine checks.  Will probably do that after I actually program some mines and lasers.

v.0.9.10 Overhauled the graphics.  Uses 3d images made in Paint 3d along with dynamically generated pieces with regards to power ups and whatnot.  Also changed some errors in code flow (continues when finishing up each activity in displayBoard) and added a console output in case someone misses a message (also removed many sleep commands now that it's ok for them to miss a message; this helps the game feel more responsive). 

v.0.9.9 Added haymaker power up as well as fixed some logic errors with items not getting picked up if a piece was forced there (this was technically not a glitch because until now there wasn't a way to end up on an item tile without intentionally moving there; this is more of a new feature, if anything)

v.0.9.8 Added a "stunned" debuff concept.  Pieces that are stunned cannot move or attack until the player has had one turn (this means if you stun your own piece, you can't use it this turn, but you can the next. However, if you stun your opponent's piece, their piece won't be unstunned until you finish your current turn AND their turn ends)

v.0.9.7 Added trip mine radial, including updating the move function to account for a player moving.  Need testing to see if forcefields properly protect you.  Functionality intends that you can use one shield to protect against any number of simultaneous trip mine blasts. 

v.0.9.6 Added purify radial and abolish foe power radial.

v.0.9.5 Added napalm radial  Consider adding a cheat menu for easier debugging

v.0.9.4 Added napalm row

v.0.9.3 Added napalm column

v.0.9.2 Added a crossCheck function to make snake tunneling and similar cross checks easier.  Also, added snake tunneling.

v.0.9.1 Added smartBombs (better air strike).  Added better handling of when you click an empty space or an enemy (instead of waiting on you to click a second square after making a false selection, it immediately tells you that you made an invalid choice and starts over).  Consider changing it to where clicking on the same non-owned square twice gives you the information popup instead.

v.0.9: Added the jumpproof item.

v.0.8.9: Added functions to check for radial/column/row.  This will reduce errors and speed up implementation of new items.

v.0.8.8: Modified all popups to always stay on top.

v.0.8.7: Selected pieces appear grey now.  There's a player turn indicator. Reduced spacing between tiles.  

v.0.8.6:
	Added a button to exit the program safely.  TKinter has an error where it breaks if you hit the X button, so the exit button is disabled now.  I also reformatted the tutorial window to look a little neater.

v.0.8.5:
	Added a tutorial that explains the basics and teaches you how to select units, how to move units, how to use an item, and (eventually) how to inspect tiles and pieces.  Tutorial todo: make formatting prettier, catch errors based on clicking the options instead of a button (might just disable buttons to make it safer), and to add the "inspect" tutorial.  Eventually need something for raising/lowering tiles.

v.0.8.4:
	Starting a simple tutorial mode to teach new players.

v.0.8.3:
	Added Wololo - allows you to steal an enemy's piece.  Needs to have the range properly added in.  Also for far future:  need to make a tutorial.

v.0.8.2:
	Added a haphazard bombing run.  Added floor damage (and floor repair).  Added some explosions.  Next update should make it to where if a piece is exploded, an explosion shows up.

v.0.8.1:
	Renamed suicideRow to SuicideBomb Row (so that you know it kills everyone and that it's not just suiciding your pieces).  Added a suicide column.


v.0.8:
	Has an updated avatar serving function.  It'll automatically keep track of what your avatar should be so that you (I) don't have to manually reassign them for each scenario.  Also, the shield (forcefield) feature has been successfully implemented.  Avatars appear to properly update on every combination involving (or not involving) shields and holding items.

v.0.7:
	Has an examine option now.  You can check public stats about the pieces and gameboard.  Features checks that prevent the buttons from being enabled if it won't flow with the game's logic.  (For example, the button is disabled if you click "use item" before clicking a piece that can use an item).  To do: add the shield, test if the pieces revert to normal.  Test to see if buffs show up properly (shield).

v 0.6:
	Can keep track of empty spaces now. Orbs exist now. You can pick up items now.  The only item implemented is the "suicide row", but it's confirmed working.  The avatar attribute is now in effect.  Your piece's avatar changes color when it's holding an item.  (Haven't tested whether it disappears when it's used up since the only working item right now kills you anyway).  Corrected in error in keeping track of the location of pieces (forgot to change i,j to rows-i-1,j for the initialization procedure).  Added an item button that greys out when not valid.  Changed the visual size of the field to help fit on smaller monitors.  To do: add the option to view the stats of an orb (maybe via a context menu?), add more items (shield most likely).  Test to make sure pieces revert to normal when they don't have an item held anymore.

v 0.5.1:
	Spawn orbs now.  Spawns in legal locations.

v 0.5:
	Major logic changes.  No longer use a "player" class, as it seems pointless, at least at the moment.  Instead, the gameBoard list now contains two elements per location - a tile object slot to keep track of the tile (its conditions), and a piece object to keep track of the pieces (their items, location, and ownership).  This should result in easier coding going forward.  Beginning work on tracking empty spaces for item orb spawns.  

v 0.4:
	Put in even more information frames, including number of pieces left.  Messages show up more neatly now.  Considering a log output somewhere on the side or bottom. 

v 0.3:
	Put in a information frame on bottom, game properly calculates whether you can move to a location (diagonals have NOT been implemented yet - that will be added when that item is added to the game; same with "around the world" items that let you move pacman style from the right edge of the field to the left, for example).  Popups have been removed since all info appears on the bottom now. Still need todo the item generation.

v 0.2:
	Gameboard properly updates between turns.  Pieces can move around anywhere (teleporting). Pieces can kill.  Turns are properly tracked and a player can't move his piece twice (opposing players can't control their opponent's pieces).  To do: generate items and allow them to be picked up.  Note: this requires changing the board logic to go from "0" for a blank area to having a 1 for denoting that items exist.  Alternatively, may need to have a new class to represent spaces as eventually I'll want the floor to be raised and damaged and whatnot. 

v 0.1:
	Starting right out with a GUI.  Currently shows the field and properly generates the starting pieces and has a logical gameboard that gets displayed for debug purposes in the console.  The next commit should feature the ability to move the pieces around, followed by a commit for properly killing a piece, followed by generating items, then picking up items, then using items (with just a print message for now). 